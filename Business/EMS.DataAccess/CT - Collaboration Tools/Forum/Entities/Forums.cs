
// Generated by Pnyx Generation tool at :04/05/2009 17:17:45
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using Microsoft.Practices.EnterpriseLibrary.Data;
using System.Data.Common;
using System.Data.SqlClient;

namespace Condesus.EMS.DataAccess.CT.Entities
{
    internal class ForumForums
    {
        internal ForumForums() { }

        #region Read Functions
        //Trae todos los resources 
        internal IEnumerable<DbDataRecord> ReadAll(String IdLanguage)
        {
            Database _db = DatabaseFactory.CreateDatabase();

            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumForums_ReadAll");
            _db.AddInParameter(_dbCommand, "IdLanguage", DbType.String, IdLanguage);
            SqlDataReader _reader = (SqlDataReader)_db.ExecuteReader(_dbCommand);

            try
            {
                foreach (DbDataRecord _record in _reader)
                {
                    yield return _record;
                }
            }
            finally
            {                
                _reader.Close();
            }
        }
        //trae el resource pedido
        internal IEnumerable<DbDataRecord> ReadById(Int64 IdForum,String IdLanguage)
        {
            Database _db = DatabaseFactory.CreateDatabase();

            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumForums_ReadById");
            _db.AddInParameter(_dbCommand, "IdForum", DbType.Int64, IdForum);
            _db.AddInParameter(_dbCommand, "IdLanguage", DbType.String, IdLanguage);
            SqlDataReader _reader = (SqlDataReader)_db.ExecuteReader(_dbCommand);

            try
            {
                foreach (DbDataRecord _record in _reader)
                {
                    yield return _record;
                }
            }
            finally
            {
                _reader.Close();
            }
        }
        #endregion
        #region FK's
        #endregion
        #region Write Functions
        internal Int64 Create(Boolean IsActive)
        {
            Database _db = DatabaseFactory.CreateDatabase();
            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumForums_Create");
            _db.AddInParameter(_dbCommand, "IsActive", DbType.Boolean, IsActive);
            _db.AddOutParameter(_dbCommand, "IdForum", DbType.Int64, 18);
            _db.ExecuteNonQuery(_dbCommand);
            //Retorna el identificador
            return Convert.ToInt64(_db.GetParameterValue(_dbCommand, "IdForum"));
        }

        internal void Delete(Int64 IdForum)
        {
            Database _db = DatabaseFactory.CreateDatabase();

            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumForums_Delete");
            _db.AddInParameter(_dbCommand, "IdForum", DbType.Int64, IdForum);
            _db.ExecuteNonQuery(_dbCommand);
        }

        internal void Update(Int64 IdForum,Boolean IsActive)
        {
            Database _db = DatabaseFactory.CreateDatabase();

            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumForums_Update");
            _db.AddInParameter(_dbCommand, "IdForum", DbType.Int64, IdForum);
            _db.AddInParameter(_dbCommand, "IsActive", DbType.Boolean, IsActive);
            _db.ExecuteNonQuery(_dbCommand);
        }
        #endregion


    }
}

