
// Generated by Pnyx Generation tool at :04/05/2009 17:17:45
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using Microsoft.Practices.EnterpriseLibrary.Data;
using System.Data.Common;
using System.Data.SqlClient;

namespace Condesus.EMS.DataAccess.CT.Entities
{
    internal class ForumWordFilters
    {
        internal ForumWordFilters() { }

        #region Read Functions
        //Trae todos los resources 
        internal IEnumerable<DbDataRecord> ReadAll()
        {
            Database _db = DatabaseFactory.CreateDatabase();

            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumWordFilters_ReadAll");
            SqlDataReader _reader = (SqlDataReader)_db.ExecuteReader(_dbCommand);

            try
            {
                foreach (DbDataRecord _record in _reader)
                {
                    yield return _record;
                }
            }
            finally
            {                
                _reader.Close();
            }
        }
        //trae el resource pedido
        internal IEnumerable<DbDataRecord> ReadById(Int64 IdFilter)
        {
            Database _db = DatabaseFactory.CreateDatabase();

            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumWordFilters_ReadById");
            _db.AddInParameter(_dbCommand, "IdFilter", DbType.Int64, IdFilter);
            SqlDataReader _reader = (SqlDataReader)_db.ExecuteReader(_dbCommand);

            try
            {
                foreach (DbDataRecord _record in _reader)
                {
                    yield return _record;
                }
            }
            finally
            {
                _reader.Close();
            }
        }
        #endregion
        #region FK's
        #endregion
        #region Write Functions
        internal Int64 Create(String Word,String ReplaceWord)
        {
            Database _db = DatabaseFactory.CreateDatabase();
            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumWordFilters_Create");
            _db.AddInParameter(_dbCommand, "Word", DbType.String, Word);
            _db.AddInParameter(_dbCommand, "ReplaceWord", DbType.String, ReplaceWord);
            _db.ExecuteNonQuery(_dbCommand);
            //Retorna el identificador
            return Convert.ToInt64(_db.GetParameterValue(_dbCommand, "IdFilter"));
        }

        internal void Delete(Int64 IdFilter)
        {
            Database _db = DatabaseFactory.CreateDatabase();

            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumWordFilters_Delete");
            _db.AddInParameter(_dbCommand, "IdFilter", DbType.Int64, IdFilter);
            _db.ExecuteNonQuery(_dbCommand);
        }

        internal void Update(Int64 IdFilter,String Word,String ReplaceWord)
        {
            Database _db = DatabaseFactory.CreateDatabase();

            DbCommand _dbCommand = _db.GetStoredProcCommand("CT_ForumWordFilters_Update");
            _db.AddInParameter(_dbCommand, "IdFilter", DbType.Int64, IdFilter);
            _db.AddInParameter(_dbCommand, "Word", DbType.String, Word);
            _db.AddInParameter(_dbCommand, "ReplaceWord", DbType.String, ReplaceWord);
            _db.ExecuteNonQuery(_dbCommand);
        }
        #endregion


    }
}

