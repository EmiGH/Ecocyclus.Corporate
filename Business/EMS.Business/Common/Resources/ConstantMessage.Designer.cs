//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Condesus.EMS.Business.Common.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ConstantMessage {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConstantMessage() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Condesus.EMS.Business.Common.Resources.ConstantMessage", typeof(ConstantMessage).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to is due the day.
        /// </summary>
        public static string Body_NotificationMessageAdvanceNotify {
            get {
                return ResourceManager.GetString("Body_NotificationMessageAdvanceNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generation of exception for result = not Ok.
        /// </summary>
        public static string CommentExceptionNotOk {
            get {
                return ResourceManager.GetString("CommentExceptionNotOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stack is empty..
        /// </summary>
        public static string EmptyStack {
            get {
                return ResourceManager.GetString("EmptyStack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This task is now performed.
        /// </summary>
        public static string ExecutionError_ReExecution {
            get {
                return ResourceManager.GetString("ExecutionError_ReExecution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not perform the task before the planned date.
        /// </summary>
        public static string ExecutionError_TaskPlanned {
            get {
                return ResourceManager.GetString("ExecutionError_TaskPlanned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to not OK.
        /// </summary>
        public static string ProcessResult_NotOk {
            get {
                return ResourceManager.GetString("ProcessResult_NotOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        public static string ProcessResult_Ok {
            get {
                return ResourceManager.GetString("ProcessResult_Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finished.
        /// </summary>
        public static string ProcessState_Finished {
            get {
                return ResourceManager.GetString("ProcessState_Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OverDue.
        /// </summary>
        public static string ProcessState_OverDue {
            get {
                return ResourceManager.GetString("ProcessState_OverDue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Planned.
        /// </summary>
        public static string ProcessState_Planned {
            get {
                return ResourceManager.GetString("ProcessState_Planned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working.
        /// </summary>
        public static string ProcessState_Working {
            get {
                return ResourceManager.GetString("ProcessState_Working", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMS Notification of task being performed.
        /// </summary>
        public static string Subject_NotificationMessageAdvanceNotify {
            get {
                return ResourceManager.GetString("Subject_NotificationMessageAdvanceNotify", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMS Data Load Notice.
        /// </summary>
        public static string Subject_NotificationMessageChargeNotice {
            get {
                return ResourceManager.GetString("Subject_NotificationMessageChargeNotice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMS Notification of Expired Documents.
        /// </summary>
        public static string Subject_NotificationMessageDocumentExpiration {
            get {
                return ResourceManager.GetString("Subject_NotificationMessageDocumentExpiration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMS Overdue Notification Task.
        /// </summary>
        public static string Subject_NotificationMessageTaskOverdue {
            get {
                return ResourceManager.GetString("Subject_NotificationMessageTaskOverdue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMS Notice of Error in Calculation of Transformation.
        /// </summary>
        public static string Subject_NotificationMessageTransformationError {
            get {
                return ResourceManager.GetString("Subject_NotificationMessageTransformationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EMS Notice of Measurement Out of Range.
        /// </summary>
        public static string Subject_NotificationMessageValueOutOfRange {
            get {
                return ResourceManager.GetString("Subject_NotificationMessageValueOutOfRange", resourceCulture);
            }
        }
    }
}
