// Generated by Pnyx Generation tool at :05/04/2009 11:10:21 p.m.
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Condesus.EMS.Business.Security;
using System.Transactions;

namespace Condesus.EMS.Business.CT.Entities
{
    public abstract class Message
    {
        #region Internal Region
        private Int64 _IdMessage;
        private Int64 _IdTopic;
        private Int64 _IdPerson;
        private DateTime _PostedDate;
        private DateTime _LastEditedDate;
        private string _Text;
        private Credential _Credential;
        
        #endregion

        #region External Region
        public Int64 IdMessage
        {
            get { return _IdMessage; }
        }
        public Topic Topic
        {
            get { return new Collections.Topics(Credential).Item(_IdTopic); }
        }
        public DS.Entities.Person Person
        {
            get { return new DS.Collections.People(_Credential).Item((Int64)_IdPerson); }
        }
        public DateTime PostedDate
        {
            get { return _PostedDate; }
        }
        public DateTime LastEditedDate
        {
            get { return _LastEditedDate; }
        }
        public string Text
        {
            get { return _Text; }
        }
        internal Credential Credential
        {
            get { return _Credential; }
        }

        internal abstract void Remove();
        public abstract void ChangeType();
        #endregion


        #region Constructor
        internal Message(Int64 idMessage, Int64 idTopic, Int64 idPerson, DateTime postedDate, DateTime lastEditedDate, String text, Credential credential)
        {
            _IdMessage = idMessage;
            _IdTopic = idTopic;
            _IdPerson = idPerson;
            _PostedDate = postedDate;
            _LastEditedDate = lastEditedDate;
            _Text = text;
            _Credential = credential;
        }

     
        #endregion


        public Message Modify(String text)
        {
            if (_IdPerson != _Credential.User.IdPerson) { throw new UnauthorizedAccessException(Common.Resources.Errors.AuthenticationFailed); }
            using (TransactionScope _transactionScope = new TransactionScope())
            {
                new Collections.Messages(_Credential).Update(this, text);
                _Text = text;
                _transactionScope.Complete();
                return this;
            }
        }
    }
}
