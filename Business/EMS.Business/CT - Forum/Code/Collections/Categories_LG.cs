// Generated by Pnyx Generation tool at :06/04/2009 03:46:02 p.m.
using System;
using System.Collections.Generic;
using System.Text;
using System.Data;
using System.Data.Common;
using System.Data.SqlClient;
using Condesus.EMS.Business;
using Condesus.EMS.DataAccess;

namespace Condesus.EMS.Business.CT.Collections
{
    public class Categories_LG
    {
        #region Internal Properties
        private Entities.Category _Category;
        #endregion
        internal Categories_LG(Entities.Category Category) 
        {
            _Category = Category;
        }

        #region Read Functions
        /// <summary>
        /// Retorna ForumCategories_LG
        /// </summary>
        /// <returns></returns>
        public Dictionary<String, Entities.Category_LG> Items()
        {
            DataAccess.CT.CollaborationTools _dbCollaborationTools = new Condesus.EMS.DataAccess.CT.CollaborationTools();

            //Coleccion para devolver las areas funcionales
            Dictionary<String, Entities.Category_LG> _oItems = new Dictionary<String, Entities.Category_LG>();

            //Traigo los datos de la base
            IEnumerable<System.Data.Common.DbDataRecord> _record = _dbCollaborationTools.ForumCategories_LG_ReadAll(_Category.IdCategory);
            //Se modifica con los datos que realmente se tienen que usar...

            //busca si hay mas de un id de area funcional igual (distintos idiomas) y si hay mas, carga solo el del lenguage seleccionado
            foreach (System.Data.Common.DbDataRecord _dbRecord in _record)
            {
                //Declara e instancia una posicion
                Entities.Category_LG _category_lg = new Entities.Category_LG(Convert.ToInt64(_dbRecord["IdCategory"]), Convert.ToString(_dbRecord["IdLanguage"]), Convert.ToString(_dbRecord["Name"]), Convert.ToString(_dbRecord["Description"]));

                //Lo agrego a la coleccion
                _oItems.Add(_category_lg.IdLanguage, _category_lg);

            }
            return _oItems;
        }
        /// <summary>
        /// Retorna ForumCategories_LG por ID
        /// </summary>
        /// <param name="IdMessage"></param>
        /// <returns></returns>
        public Entities.Category_LG Item(String IdLanguage)
        {
            DataAccess.CT.CollaborationTools _dbCollaborationTools = new Condesus.EMS.DataAccess.CT.CollaborationTools();

            //Coleccion para devolver las areas funcionales
            Entities.Category_LG _Item = null;

            //Traigo los datos de la base
            IEnumerable<System.Data.Common.DbDataRecord> _record = _dbCollaborationTools.ForumCategories_LG_ReadById(_Category.IdCategory, _Category.Credential.CurrentLanguage.IdLanguage);
            //Se modifica con los datos que realmente se tienen que usar...

            //busca si hay mas de un id de area funcional igual (distintos idiomas) y si hay mas, carga solo el del lenguage seleccionado
            foreach (System.Data.Common.DbDataRecord _dbRecord in _record)
            {
                //Declara e instancia una posicion
                _Item = new Entities.Category_LG(Convert.ToInt64(_dbRecord["IdCategory"]), Convert.ToString(_dbRecord["IdLanguage"]), Convert.ToString(_dbRecord["Name"]), Convert.ToString(_dbRecord["Description"]));

            }
            return _Item;

        }

        #endregion
        #region Write Functions
        //Crea ForumCategories_LG
        public Entities.Category_LG Create(String idLanguage, String Name,String Description)
        {
            try
            {
                DataAccess.CT.CollaborationTools _dbCollaborationTools = new Condesus.EMS.DataAccess.CT.CollaborationTools();

                _dbCollaborationTools.ForumCategories_LG_Create(_Category.IdCategory, idLanguage, Name, Description);

                //Log
                DataAccess.Log.Log _dbLog = new Condesus.EMS.DataAccess.Log.Log();
                _dbLog.Create("CT_ForumCategories_LG", "Categories_LG", "Add", "IdCategory=" + _Category.IdCategory + " and IdLanguage= '" + idLanguage + "'", _Category.Credential.User.IdPerson);

                return new Entities.Category_LG(_Category.IdCategory, idLanguage, Name, Description);
            }
            catch (SqlException ex)
              {
                  if (ex.Number == Common.Constants.ErrorDataBaseDuplicatedKey)
                  {
                      throw new Exception(Common.Resources.Errors.DuplicatedDataRecord, ex);
                  }
                  throw ex;
              }
        }
        public void Delete(String idLanguage)
        {
             //Check to verify that the language option to be deleted is not default language
            if (_Category.Credential.DefaultLanguage.IdLanguage == idLanguage)
            {
                throw new Exception(Common.Resources.Errors.RemoveDefaultCulture);
            }
            try
            {
                DataAccess.CT.CollaborationTools _dbCollaborationTools = new Condesus.EMS.DataAccess.CT.CollaborationTools();

                _dbCollaborationTools.ForumCategories_LG_Delete(_Category.IdCategory, idLanguage);

                //Log
                DataAccess.Log.Log _dbLog = new Condesus.EMS.DataAccess.Log.Log();
                _dbLog.Create("CT_ForumCategories_LG", "Categories_LG", "Delete", "IdCategory=" + _Category.IdCategory + " and IdLanguage= '" + idLanguage + "'", _Category.Credential.User.IdPerson);
            }
            catch (SqlException ex)
            {
                if (ex.Number == Common.Constants.ErrorDataBaseDeleteReferenceConstraints)
                {
                    throw new Exception(Common.Resources.Errors.RemoveDependency, ex);
                }
                throw ex;
            }
        }

        public void Update(String idLanguage, String Name, String Description)
        {
            try
            {
                DataAccess.CT.CollaborationTools _dbCollaborationTools = new Condesus.EMS.DataAccess.CT.CollaborationTools();

                _dbCollaborationTools.ForumCategories_LG_Update(_Category.IdCategory, idLanguage, Name, Description);

                //Log
                DataAccess.Log.Log _dbLog = new Condesus.EMS.DataAccess.Log.Log();
                _dbLog.Create("CT_ForumCategories_LG", "Categories_LG", "Update", "IdCategory=" + _Category.IdCategory + " and IdLanguage= '" + idLanguage + "'", _Category.Credential.User.IdPerson);

            }
            catch (SqlException ex)
            {
                  if (ex.Number == Common.Constants.ErrorDataBaseDuplicatedKey)
                  {
                      throw new Exception(Common.Resources.Errors.DuplicatedDataRecord, ex);
                  }
                  throw ex;
            }
        }
        #endregion
    }
        
}

